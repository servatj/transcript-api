name: Deploy to Server via SSH

on:
  push:
    branches:
      - main # Or 'master', depending on your primary branch

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0 # Using a current version
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          # Optional: Add a command to verify the fingerprint if you have it
          # ssh-keygen -lf ~/.ssh/known_hosts 
          # Or, if you have the fingerprint, you could use something like:
          # ssh-keyscan -H ${{ secrets.SSH_HOST }} | grep '${{ secrets.SSH_HOST_FINGERPRINT }}' >> ~/.ssh/known_hosts || exit 1

      - name: Deploy to server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          TARGET_DIR: ${{ secrets.SSH_TARGET_DIR }} # e.g., /home/user/myapp
        run: |
          ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} << EOF
            cd ${TARGET_DIR}
            git fetch origin
            git reset --hard origin/main # Or your primary branch name
            
            # Ensure .env file is present (it should be manually placed on the server)
            if [ ! -f .env ]; then
              echo ".env file not found on server at ${TARGET_DIR}/.env. Deployment aborted."
              exit 1
            fi
            
            echo "Pulling latest Docker images (if any are referenced directly in docker-compose.yml, e.g. redis)"
            docker-compose -f docker-compose.yml pull redis # Pull external images like redis

            echo "Stopping current services..."
            docker-compose -f docker-compose.yml down --remove-orphans
            
            echo "Building services..."
            docker-compose -f docker-compose.yml build api # Rebuild the api service
            
            echo "Starting services..."
            docker-compose -f docker-compose.yml up -d
            
            echo "Deployment successful!"
          EOF
